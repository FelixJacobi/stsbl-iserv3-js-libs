Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 stsbl-iserv3-js-libs (17.01.12-0) unstable; urgency=low
 .
   * Initial release.
Author: Stadtteilschule Blankenese <repository@stsbl.de>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2017-01-12

--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/Controller/DefaultController.php
@@ -0,0 +1,54 @@
+<?php
+namespace Stsbl\JavaScriptLibraryBundle\Controller;
+
+use IServ\CoreBundle\Controller\PageController;
+use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
+use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
+use Symfony\Component\HttpFoundation\Request;
+
+/*
+ * The MIT License
+ *
+ * Copyright 2017 felix.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+/**
+ * DefaultController
+ *
+ * @author Felix Jacobi <felix.jacobi@stsbl.de>
+ * @license MIT license <https://opensource.org/licenses/MIT>
+ * @Route("stsbl/javascript")
+ */
+class DefaultController extends PageController
+{
+    /**
+     * indexAction
+     * 
+     * @param Request $request
+     * @return array
+     * @Route("")
+     * @Template()
+     */
+    public function indexAction(Request $request)
+    {
+        return [];
+    }
+}
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/DependencyInjection/Configuration.php
@@ -0,0 +1,64 @@
+<?php
+// src/Stsbl/JavaScriptLibraryBundle/DependencyInjection/Configuration.php
+namespace Stsbl\JavaScriptLibraryBundle\DependencyInjection;
+
+use Symfony\Component\Config\Definition\Builder\TreeBuilder;
+use Symfony\Component\Config\Definition\ConfigurationInterface;
+
+/*
+ * The MIT License
+ *
+ * Copyright 2017 Felix Jacobi.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+/**
+ * This is the class that validates and merges configuration from your app/config files
+ *
+ * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html#cookbook-bundles-extension-config-class}
+ * 
+ * @author Felix Jacobi <felix.jacobi@stsbl.de>
+ * @license MIT license <https://mit.otg/licenses/MIT>
+ */
+class Configuration implements ConfigurationInterface
+{
+    private $alias;
+
+    /**
+     * The constructor
+     *
+     * @param string $alias The alias of the extension (for config)
+     */
+    public function __construct($alias)
+    {
+        $this->alias = $alias;
+    }
+
+    /**
+     * {@inheritDoc}
+     */
+    public function getConfigTreeBuilder()
+    {
+        $treeBuilder = new TreeBuilder();
+        $rootNode = $treeBuilder->root($this->alias);
+
+        return $treeBuilder;
+    }
+}
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/DependencyInjection/StsblJavaScriptLibraryExtension.php
@@ -0,0 +1,60 @@
+<?php
+// src/Stsbl/JavaScriptLibraryBundle/DependencyInjection/StsblJavaScriptLibraryExtension.php
+namespace Stsbl\JavaScriptLibraryBundle\DependencyInjection;
+
+use Symfony\Component\Config\FileLocator;
+use Symfony\Component\DependencyInjection\ContainerBuilder;
+use Symfony\Component\DependencyInjection\Loader;
+use Symfony\Component\HttpKernel\DependencyInjection\Extension;
+
+/*
+ * The MIT License
+ *
+ * Copyright 2017 Felix Jacobi.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+/**
+ * This is the class that loads and manages your bundle configuration
+ *
+ * To learn more see {@link http://symfony.com/doc/current/cookbook/bundles/extension.html}
+ * 
+ * @author Felix Jacobi <felix.jacobi@stsbl.de>
+ * @license MIT license <https://mit.otg/licenses/MIT>
+ */
+class StsblJavaScriptLibraryExtension extends Extension
+{
+    /**
+     * {@inheritDoc}
+     */
+    public function load(array $configs, ContainerBuilder $container)
+    {
+        $configuration = new Configuration($this->getAlias());
+        $config = $this->processConfiguration($configuration, $configs);
+        
+        $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
+        $loader->load('services.yml');
+    }
+    
+    public function getAlias()
+    {
+        return 'stsbl_javascript_libraries';
+    }
+}
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/Resources/config/services.yml
@@ -0,0 +1,2 @@
+## src/Stsbl/JavaScriptLibraryBundle/Resources/config/services.yml
+---
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/Resources/public/js/jquery.initialize.js
@@ -0,0 +1,53 @@
+/*!
+ * jQuery initialize - v1.0.0 - 12/14/2016
+ * https://github.com/adampietrasiak/jquery.initialize
+ *
+ * Copyright (c) 2015-2016 Adam Pietrasiak
+ * Released under the MIT license
+ * https://github.com/timpler/jquery.initialize/blob/master/LICENSE
+ */
+;(function ($) {
+    // MutationSelectorObserver represents a selector and it's associated initialization callback.
+    var MutationSelectorObserver = function (selector, callback) {
+        this.selector = selector;
+        this.callback = callback;
+    };
+
+    // List of MutationSelectorObservers.
+    var msobservers = [];
+    msobservers.initialize = function (selector, callback) {
+
+        // Wrap the callback so that we can ensure that it is only
+        // called once per element.
+        var seen = [];
+        callbackOnce = function () {
+            if (seen.indexOf(this) == -1) {
+                seen.push(this);
+                $(this).each(callback);
+            }
+        };
+
+        // See if the selector matches any elements already on the page.
+        $(selector).each(callbackOnce);
+
+        // Then, add it to the list of selector observers.
+        this.push(new MutationSelectorObserver(selector, callbackOnce));
+    };
+
+    // The MutationObserver watches for when new elements are added to the DOM.
+    var observer = new MutationObserver(function (mutations) {
+
+        // For each MutationSelectorObserver currently registered.
+        for (var j = 0; j < msobservers.length; j++) {
+            $(msobservers[j].selector).each(msobservers[j].callback);
+        }
+    });
+
+    // Observe the entire document.
+    observer.observe(document.documentElement, {childList: true, subtree: true, attributes: true});
+
+    // Handle .initialize() calls.
+    $.fn.initialize = function (callback) {
+        msobservers.initialize(this.selector, callback);
+    };
+})(jQuery);
\ No newline at end of file
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/Resources/views/Default/index.html.twig
@@ -0,0 +1,17 @@
+{# src/Stsbl/JavaScriptLibraryBundle/Resources/views/Default/index.html.twig #}
+{% extends 'IServCoreBundle::page.html.twig' %}
+{% import 'StsblJavaScriptLibraryBundle::macros.html.twig' as jsm %}
+
+{% block javascripts %}
+    {{ parent() }}
+    
+    {{ jsm.StsblJavascriptLibraries() }}
+{% endblock %}
+
+{% block page_title %}
+    StsblJavaScriptBundle
+{% endblock %}
+
+{% block content %}
+    <h1>StsblJavaScriptBundle was installed successful!</h1>
+{% endblock %}
\ No newline at end of file
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/Resources/views/macros.html.twig
@@ -0,0 +1,10 @@
+{# src/Stsbl/JavaScriptLibraryBundle/Resources/views/macros.html.twig #}
+
+{% macro StsblJavascriptLibraries() %}
+    {% if app.environment != 'prod' %}
+	<!-- {{ _self.templateName }} => vendor/jquery.initialize.js -->
+    {% endif %}
+    {% javascripts output='js/compiled/jquery.initialize.js' filter='?uglifyjs2' '@StsblJavaScriptLibraryBundle/Resources/public/js/jquery.initialize.js' %}
+        <script type="text/javascript" src="{{ asset_url }}"></script>
+    {% endjavascripts %}
+{% endmacro %}
--- /dev/null
+++ stsbl-iserv3-js-libs-17.01.12/src/Stsbl/JavaScriptLibraryBundle/StsblJavaScriptLibraryBundle.php
@@ -0,0 +1,43 @@
+<?php
+// src/Stsbl/JavaScriptLibraryBundle/StsblJavaScriptLibraryBundle.php
+namespace Stsbl\JavaScriptLibraryBundle;
+
+use IServ\CoreBundle\Routing\AutoloadRoutingBundleInterface;
+use Stsbl\JavaScriptLibraryBundle\DependencyInjection\StsblJavaScriptLibraryExtension;
+use Symfony\Component\HttpKernel\Bundle\Bundle;
+
+/*
+ * The MIT License
+ *
+ * Copyright 2017 Felix Jacobi.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ */
+
+/**
+ * @author Felix Jacobi <felix.jacobi@stsbl.de>
+ * @license MIT license <https://opensource.org/licenses/MIT>
+ */
+class StsblJavaScriptLibraryBundle extends Bundle implements AutoloadRoutingBundleInterface
+{
+    public function getContainerExtension() 
+    {
+        return new StsblJavaScriptLibraryExtension();
+    }
+}
